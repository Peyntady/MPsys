#include <stdio.h>

#include <locale.h>
#include <stdlib.h>



int main(void)
{
    int *vector_1;
    int *vector_2;
    char operation_type = 0;
    float *vector_result;
    int size = 0;
    int i = 0;

    setlocale(LC_ALL, "Russian");

    do
    {
        puts("Vvedite vektori:");
        scanf("%i", &size);

        if (size <= 10)
        {
            vector_1 = calloc(size, sizeof(int));
            puts("Vvedite koordinati 1 vektora");
            for (i = 0; i < size; i++) {
                printf("vector_1[%i]=", i);
                scanf("%i", &vector_1[i]);
            }

            puts("Vvedite operaciu");
            puts("(+,-,*,/,)(q - выход)");
            scanf(" %c", &operation_type);

            switch (operation_type)
            {
                case '+':
                    vector_2 = calloc(size, sizeof(int));
                    puts("Vvedite koordinati 2 vektora");
                    for (i = 0; i < size; i++) {
                        printf("vector_2[%i]=", i);
                        scanf("%i", &vector_2[i]);
                    }

                    vector_result = calloc(size, sizeof(float));

                    for (i = 0; i < size; i++) {
                        vector_result[i] = vector_1[i] + vector_2[i];
                    }

                    puts("Otvet:");
                    for (i = 0; i < size; i++) {
                        printf( "vector_result[%i] = %f \n", i, vector_result[i]);
                    }
                    break;
                case '-':
                    vector_2 = calloc(size, sizeof(int));
                    puts("Vvedite koordinati 2 vektora");
                    for (i = 0; i < size; i++) {
                        printf("vector_2[%i]=", i);
                        scanf("%i", &vector_2[i]);
                    }

                    vector_result = calloc(size, sizeof(float));

                    for (i = 0; i < size; i++) {
                        vector_result[i] = vector_1[i] - vector_2[i];
                    }

                    puts("Otvet:");
                    for (i = 0; i < size; i++) {
                        printf( "vector_result[%i] = %f \n", i, vector_result[i]);
                    }
                    break;
                case '*':
                    vector_2 = calloc(size, sizeof(int));
                    puts("Vvedite koortdinati 2 vektora");
                    for (i = 0; i < size; i++) {
                        printf("vector_2[%i]=", i);
                        scanf("%i", &vector_2[i]);
                    }

                    vector_result = calloc(size, sizeof(float));

                    for (i = 0; i < size; i++) {
                        vector_result[i] = vector_1[i] * vector_2[i];
                    }

                    puts("Otvet:");
                    for (i = 0; i < size; i++) {
                        printf( "vector_result[%i] = %f \n", i, vector_result[i]);
                    }
                    break;
                case '/':
                    vector_2 = calloc(size, sizeof(int));
                    puts("Vvedite koordinati 2 vektora");
                    for (i = 0; i < size; i++) {
                        printf("vector_2[%i]=", i);
                        scanf("%i", &vector_2[i]);
                    }

                    vector_result = calloc(size, sizeof(float));

                    for (i = 0; i < size; i++) {
                        vector_result[i] = vector_1[i] / vector_2[i];
                    }

                    puts("Otvet:");
                    for (i = 0; i < size; i++) {
                        printf( "vector_result[%i] = %f \n", i, vector_result[i]);
                    }
                    break;
                case 'q':
                    puts("Vihod is programi");
                    break;
                default:
                    puts("Nedostupno");
                    puts("Poprobuite snova");
                    break;
            }
        }
        else
        {
            puts("Slishkom bolshoy vektor");
        }
    }
    while (operation_type != 'q');
    free(vector_1);
    free(vector_2);
    free(vector_result);

    puts("Zavershenie");
}
